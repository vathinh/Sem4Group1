spring:
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      routes:
        - id: user-service
          uri: lb://user-service
          predicates: Path=/api/user/**

        - id: discovery-server
          uri: http://eureka:password@${app.eureka-server}:8761
          predicates: Path=/eureka/web
          filters: SetPath=/

        - id: discovery-server-static
          uri: http://eureka:password@${app.eureka-server}:8761
          predicates: Path=/eureka/**


  application:
    name: api-gateway
  sleuth:
    sampler:
      probability: '1.0'
  main:
    web-application-type: reactive
  zipkin:
    base-url: http://localhost:9411
  security:
    oauth2:
      client:
        provider:
          my-keycloak-provider:
            issuer-uri: http://localhost:8080/realms/sem4Infras
            # Individual properties can also be provided this way
        #            token-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/token
        #            authorization-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/auth
        #            userinfo-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/userinfo
        #            user-name-attribute: preferred_username
        registration:
          keycloak-spring-gateway-client:
            provider: my-keycloak-provider
            scope: openid
            client-id: spring-gateway-client
            client-secret: QcC6BSSgKUV1kxBzCqqd1xOJeqRIYmQJ
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/realms/sem4Infras/protocol/openid-connect/certs
app:
  eureka-server: localhost
server:
  port: '8181'
logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka